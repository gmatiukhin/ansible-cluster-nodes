- name: Setup Clevis for disk decryption at boot
  hosts: nodes
  become: true
  gather_facts: false

  vars_prompt:
    - name: luks_password
      prompt: Please enter your LUKS password

  tasks:
    - name: Ensure that clevis is installed
      ansible.builtin.apt:
        name: clevis
        state: present
    - name: Ensure that clevis-luks is installed
      ansible.builtin.apt:
        name: clevis-luks
        state: present
    - name: Ensure that clevis-initramfs is installed
      ansible.builtin.apt:
        name: clevis-initramfs
        state: present
    - name: Check that the encrypted disk is /dev/sda5
      ansible.builtin.command: cryptsetup luksDump /dev/sda5
      changed_when: false
    - name: Bind Clevis to Tang server
      ansible.builtin.command:
        cmd: "sudo clevis luks bind -y -d /dev/sda5 -s 1 tang '{\"url\": \"https://tang.gmatiukhin.site\"}'"
        stdin: "{{ luks_password }}"
      changed_when: true
    - name: Create initramfs hook file
      ansible.builtin.copy:
        dest: /etc/initramfs-tools/hooks/preclevis
        mode: "0744"
        owner: root
        content: |
          #!/bin/sh
          PREREQ=""
          prereqs()
          {
                  echo "$PREREQ"
          }
          case $1 in
          # get pre-requisites
          prereqs)
                  prereqs
                  exit 0
                  ;;
          esac
          . /usr/share/initramfs-tools/hook-functions
          copy_exec /usr/lib/*/libnss_dns.so*
          mkdir -p "${DESTDIR}/etc/ssl"
          cp -a /etc/ssl/certs "${DESTDIR}/etc/ssl/certs"
    - name: Create initramfs premount script file
      ansible.builtin.copy:
        dest: /etc/initramfs-tools/scripts/init-premount/preclevis
        owner: root
        mode: "0744"
        content: |
          #!/bin/sh
          PREREQ=""
          prereqs()
          {
            echo "$PREREQ"
          }
          case $1 in
          # get pre-requisites
          prereqs)
            prereqs
            exit 0
            ;;
          esac
          . /scripts/functions
          configure_networking
          if ! [ -s /etc/resolv.conf ]; then
            for ns in "$IPV6DNS0" "$IPV6DNS1" "$IPV4DNS0" "$IPV4DNS1"; do
              if [ -n "$ns" -a "$ns" != "0.0.0.0" ]; then
                echo "nameserver $ns" >> /etc/resolv.conf
              fi
            done
          fi
    - name: Update initramfs to include Clevis unlock
      ansible.builtin.command: "update-initramfs -u -k 'all'"
      changed_when: true
